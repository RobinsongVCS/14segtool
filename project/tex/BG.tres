[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://tex/14seg_BG.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorUniform" id=2]
output_port_for_preview = 0
uniform_name = "off"

[sub_resource type="VisualShaderNodeColorOp" id=3]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=8]

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec4 off : hint_color;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = off.rgb;
	float n_out3p1 = off.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ColorOp:4
	vec3 n_out4p0 = min(n_out3p0, n_out2p0);

// VectorOp:9
	vec3 n_in9p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = n_out4p0 + n_in9p1;

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -21.3333, -43.3333 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 2240, 120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 960, 300 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 1000, -40 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 1400, 20 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 1800, 40 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 4, 1, 9, 0, 0, 0, 4, 0, 9, 0, 2, 0, 0, 1 )

[resource]
shader = SubResource( 9 )
shader_param/off = Color( 0.2, 0, 0, 1 )
